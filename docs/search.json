[
  {
    "objectID": "00_about.html",
    "href": "00_about.html",
    "title": "Scripts e códigos",
    "section": "",
    "text": "Esta página contém os códigos e imagens de exemplo que podem ser utilizados para reproduzir os exemplos apresentados no resumo “Luz, câmera, pliman! morfometria foliar do linho no software R” apresentado durante a 66a Reunião Brasileira da Sociedade Internacional de biometria.\n\nDesenvolvedor\n\n\n\n\n\n\n\nVisão geral\n\n{pliman} (plant image analysis) foi desenvolvido (mas não limitado) para analisar imagens de plantas, especialmente relacionadas à análise de folhas e sementes. O pacote irá ajudá-lo a:\n\nMedir a severidade das doenças foliares;\nContar o número de lesões;\nObter características da forma das lesões;\nContar objetos em uma imagem;\nObter características dos objetos (área, perímetro, raio, circularidade, excentricidade, solidez, alongamento);\nObter os valores RGB para cada objeto em uma imagem;\nObter as coordenadas dos objetos;\nObter os contornos dos objetos;\nIsolar objetos;\nMedições de objetos de plotagem.\n\n\n\nInstalação\nInstale a versão lançada do pliman do CRAN com:\n\ninstall.packages (\"pliman\")\n\nOu instale a versão de desenvolvimento do GitHub\n\n#instalação do github\nif(!require(devtools)){\n  install.packages(\"devtools\")\n}\n\ninstall_github(\"TiagoOlivoto/pliman\")\n\n# Para instalar um HTML vinheta, use\ndevtools::install_github(\"TiagoOlivoto/pliman\", build_vignettes = TRUE)\n\nObservação: Se você é um usuário do Windows, é recomendável primeiro baixar e instalar a versão mais recente do Rtools. Para obter as notas de lançamento mais recentes sobre esta versão de desenvolvimento, consulte o arquivo NEWS.\n\n\nCitação\nPara citar o pacote pliman em seus estudos, por favor, use a seguinte referência:\n\nOlivoto, Tiago. 2022. “Luzes, Câmera, Pliman! Um Pacote R para Análise de Imagens de Plantas”. Methods in Ecology and Evolution 13(4): 789–98 doi: 10.1111/2041-210X. 13803\n\n\n\ncitation(\"pliman\")\n\n\nPlease, support this project by citing it in your publications!\n\n  Olivoto, T.(2022). Lights, camera, pliman! An R package for plant\n  image analysis. Methods Ecol Evol. 13:789-798\n  doi:10.1111/2041-210X.13803\n\nA BibTeX entry for LaTeX users is\n\n  @Article{Olivoto2022,\n    author = {Tiago Olivoto},\n    title = {Lights, camera, pliman! An R package for plant image analysis},\n    journal = {Methods in Ecology and Evolution},\n    volume = {13},\n    number = {4},\n    pages = {789-798},\n    year = {2022},\n    doi = {10.1111/2041-210X.13803},\n  }\n\n\n\n\nPacotes úteis\nOs resultados gerados pelo pacote pliman são retornados como objetos data.frame, o que permite manipulação futura dentro do R. Portanto, sugere-se que os seguintes pacotes sejam instalados.\n\nlibrary(tidyverse) # manipulação de dados\nlibrary(metan) # estatísticas descritivas / organizar gráficos\n\n\n\nComo reproduzir\nPrimeiro, baixe o arquivo .zip que contém o site estático.\n   Baixe as imagens e scripts \nA pasta img tem a seguinte estrutura.\n\n\nE:/Desktop/UFSC/projetos/pesquisa/desempenho_linhaca/pliman_rbras2022\n├── 00_about.qmd\n├── 00_about.rmarkdown\n├── 01_code.qmd\n├── 404.qmd\n├── docs\n├── imgs\n│   ├── area_foliar.xlsx\n│   ├── B).jpg\n│   ├── density.png\n│   ├── img1.jpg\n│   ├── img2.jpg\n│   ├── img3.jpg\n│   ├── proc\n│   ├── proc_img.png\n│   ├── scatter.png\n│   └── site.png\n├── pliman_rbras2022.Rproj\n└── _quarto.yml\n\n\nO material html (_site/index.html) dará acesso ao site. Dentro dele, será possível visualizar todos os exemplos, com códigos e saídas. Para reproduzir o material, basta utilizar os arquivos *.qmd.\nPara renderização, sugere-se que a pasta imgs seja definida como o diretório padrão. No meu caso, defino o diretório usando o seguinte comando.\n\n# muda de acordo com sua pasta\nsetwd(\"E:/Desktop/UFSC/cursos/pliman_tut/imgs\")\n\n\n\n\nslides\nVeja os slides aqui\n\n\n\n\n\n\nLicença\nEste conteúdo está licenciado com uma Licença Creative Commons - Atribuição-NãoComercial-CompartilhaIgual 4.0 Internacional. O resumo legível da licença afirma que você tem o direito de:\n\nCompartilhar — copie e redistribua o material em qualquer meio ou formato.\nAdaptar — remixar, transformar e construir sobre o material\nAtribuir — Você deve dar o crédito apropriado, fornecer um link para a licença e indicar se foram feitas alterações. Você deve fazê-lo sob quaisquer circunstâncias razoáveis, mas de forma alguma sugerindo que o licenciante endossa você ou seu uso.\n\nEsta licença e válida sob os seguintes termos:\n\nNão comercial (NC) — Você não pode usar o material para fins comerciais.\nShare Alike (SA) — Se você remixar, transformar ou desenvolver o material, deverá distribuir suas contribuições sob a mesma licença do original.\nSem restrições adicionais — Você não pode aplicar termos legais ou medidas tecnológicas que restrinjam legalmente outras pessoas de fazer qualquer coisa que a licença permita.\n\n\n\nSelo DC\n\nO selo selo Democratizando Conhecimento (DC) é uma ideia criada pelo Prof. Ben Dêivid. O selo é compatível com a licença Creative Commons CC BY NC SA 4.0 e é utilizado aqui para garantir que o acesso de todo esse material seja livre, gratuíto e de código aberto. Meu principal objetivo com isso é democratizar o uso e aplicação do R nas Ciências Agrárias.\n\n\nVisite-nos!\n\n\n\n\n\n\nFree website hit counter"
  },
  {
    "objectID": "01_code.html",
    "href": "01_code.html",
    "title": "Códigos exemplo pliman",
    "section": "",
    "text": "Diretório\n\nsetwd(\"E:/Desktop/UFSC/projetos/pesquisa/desempenho_linhaca/pliman_rbras2022/imgs\")\n\n\n\nPacote e imagem\n\nlibrary(pliman)\nimg <- image_import(\"img3.jpg\") |> image_vertical()\n\n\n\nEscala de cinza\n\ncinza <- image_index(img, \"R/(G/B)\")\n\n\n\nplot(cinza)\n\n\n\nplot(cinza, type = \"density\")\n\n\n\n\n\n\nImagem binária\n\nimage_binary(img, \"R/(G/B)\")\n\n\n\nimage_binary(img, \"R/(G/B)\", filter = 3) |> image_export(\"binary.png\")\n\n\n\n\n\n\nImagem segmentada\n\nimage_segment(img, index = \"R/(G/B)\", filter = 3)\n\n\n\n\n\n\nAnálise de imagem única\n\n\nres <- \n  analyze_objects(img,\n                  reference = TRUE,\n                  reference_area = 20,\n                  back_fore_index = \"R/(G/B)\", # padrão\n                  fore_ref_index = \"B-R\",      # padrão\n                  marker = \"length\",           # plota o comprimento\n                  save_image = TRUE,\n                  marker_size = 4,\n                  contour_size = 3,\n                  filter = 2,\n                  watershed = FALSE)\nres$results\n##    id          x         y      area   area_ch perimeter radius_mean radius_min\n## 1   1  529.77760  924.6812 0.3446278 0.3440869  2.995831   0.3844808 0.15481513\n## 2   2  949.55259  912.5353 0.3584963 0.3561785  2.898991   0.3782708 0.16828653\n## 3   3 1260.26384  994.9072 0.2714605 0.2715764  2.716170   0.3461366 0.13158363\n## 4   4  860.14920 1220.2423 0.3332316 0.3316091  2.865749   0.3773349 0.15500763\n## 5   5  243.85482 1289.7224 0.3616254 0.3606597  2.957182   0.3963249 0.16085279\n## 6   6 1258.71856 1322.2752 0.2218196 0.2204675  2.641478   0.3300356 0.10465464\n## 7   7  582.00382 1356.9511 0.2323273 0.2308593  2.657076   0.3419407 0.12003240\n## 8   8  938.19238 1423.9601 0.2516042 0.2503293  2.793405   0.3475526 0.11383950\n## 9   9 1429.54710 1540.0829 0.2964935 0.2954504  2.808271   0.3793018 0.13647431\n## 10 10   53.65365 1607.0331 0.3463275 0.3447823  2.944448   0.3792172 0.15910674\n## 11 11  644.61216 1573.7576 0.2281937 0.2290436  2.522060   0.3180054 0.11863891\n## 12 12 1024.70104 1844.3885 0.2424100 0.2403625  2.687150   0.3425227 0.11332568\n## 13 13 1291.12651 1859.0234 0.1945074 0.1936576  2.605328   0.3236916 0.09266310\n## 14 14  642.18770 1894.6378 0.2482046 0.2472775  2.846037   0.3553820 0.11471275\n## 15 15  320.08424 1942.2883 0.1953573 0.1975593  2.534901   0.3237082 0.09194441\n## 16 16 1414.16115 2084.0034 0.2356495 0.2447665  2.858985   0.3618507 0.07715044\n## 18 18  777.14641 2303.6177 0.2176861 0.2181883  2.552330   0.3235707 0.10946623\n##    radius_max radius_sd diam_mean  diam_min diam_max major_axis minor_axis\n## 1   0.6639589 0.1598671 0.7689616 0.3096303 1.327918   1.321150  0.3329804\n## 2   0.6407819 0.1495291 0.7565416 0.3365731 1.281564   1.277453  0.3582100\n## 3   0.5955989 0.1492796 0.6922733 0.2631673 1.191198   1.220933  0.2868262\n## 4   0.6291550 0.1500798 0.7546699 0.3100153 1.258310   1.247955  0.3429822\n## 5   0.6466970 0.1549583 0.7926498 0.3217056 1.293394   1.293592  0.3594038\n## 6   0.5905483 0.1520372 0.6600713 0.2093093 1.181097   1.204766  0.2353317\n## 7   0.5983546 0.1535110 0.6838815 0.2400648 1.196709   1.196815  0.2475766\n## 8   0.6322201 0.1600202 0.6951052 0.2276790 1.264440   1.268833  0.2531711\n## 9   0.6266362 0.1606328 0.7586036 0.2729486 1.253272   1.291021  0.2934363\n## 10  0.6507226 0.1579679 0.7584344 0.3182135 1.301445   1.325319  0.3335385\n## 11  0.5579593 0.1385231 0.6360108 0.2372778 1.115919   1.125798  0.2600927\n## 12  0.6179257 0.1564724 0.6850455 0.2266514 1.235851   1.249761  0.2476500\n## 13  0.5876633 0.1540389 0.6473832 0.1853262 1.175327   1.193691  0.2090159\n## 14  0.6438864 0.1653476 0.7107641 0.2294255 1.287773   1.290101  0.2456370\n## 15  0.5788877 0.1532455 0.6474164 0.1838888 1.157775   1.173895  0.2160900\n## 16  0.6582413 0.1709544 0.7237014 0.1543009 1.316483   1.320873  0.2412076\n## 18  0.5817714 0.1437231 0.6471414 0.2189325 1.163543   1.146145  0.2447642\n##      length     width radius_ratio eccentricity       theta  solidity convexity\n## 1  1.308146 0.3413226     4.288721   0.10846540  1.19394401 1.0015718 0.8919313\n## 2  1.262084 0.3597471     3.807684   0.13534814 -0.09677416 1.0065076 0.9481943\n## 3  1.185332 0.2836722     4.526391   0.09753889  1.36271126 0.9995733 0.9133436\n## 4  1.251419 0.3459240     4.058864   0.11716635 -1.10662029 1.0048928 0.9110984\n## 5  1.284291 0.3633933     4.020428   0.11587406 -0.93262817 1.0026778 0.8964791\n## 6  1.172705 0.2330353     5.642829   0.06964329  0.36308158 1.0061328 0.8863758\n## 7  1.186091 0.2539151     4.984942   0.06972061 -0.57364585 1.0063588 0.8486828\n## 8  1.255814 0.2548948     5.553609   0.07322383 -0.27050666 1.0050926 0.9040611\n## 9  1.248538 0.2904533     4.591605   0.08225811 -0.73625218 1.0035303 0.9288333\n## 10 1.297796 0.3319061     4.089849   0.11519324 -1.41464984 1.0044818 0.9394112\n## 11 1.102859 0.2668715     4.703005   0.09404834 -0.29641759 0.9962894 0.9276290\n## 12 1.218743 0.2484076     5.452654   0.07217917  1.50050859 1.0085182 0.9313837\n## 13 1.172950 0.2058465     6.341934   0.05491801 -0.45716066 1.0043886 0.7752521\n## 14 1.265246 0.2460315     5.613032   0.06437421 -0.43494484 1.0037494 0.9033602\n## 15 1.146220 0.2233489     6.296062   0.05761423  0.59556881 0.9888541 0.9245738\n## 16 1.274214 0.2491997     8.531920   0.05614154 -0.56104383 0.9627525 0.6485397\n## 18 1.127796 0.2428171     5.314620   0.07807720 -0.40990966 0.9976983 0.7439486\n##    elongation circularity circularity_haralick circularity_norm    coverage\n## 1   0.7390792    26.04260             2.405003         2.121756 0.002471883\n## 2   0.7149580    23.44277             2.529747         1.909551 0.002571357\n## 3   0.7606813    27.17735             2.318714         2.225899 0.001947082\n## 4   0.7235746    24.64508             2.514228         2.006791 0.002390142\n## 5   0.7170476    24.18227             2.557623         1.964875 0.002593800\n## 6   0.8012840    31.45531             2.170755         2.586467 0.001591027\n## 7   0.7859227    30.38841             2.227467         2.489856 0.001666394\n## 8   0.7970282    31.01344             2.171929         2.545956 0.001804660\n## 9   0.7673653    26.59886             2.361297         2.166781 0.002126634\n## 10  0.7442541    25.03345             2.400597         2.041281 0.002484074\n## 11  0.7580185    27.87451             2.295685         2.287302 0.001636746\n## 12  0.7961772    29.78745             2.189029         2.450061 0.001738714\n## 13  0.8245053    34.89703             2.101363         2.877901 0.001395127\n## 14  0.8055465    32.63406             2.149302         2.677791 0.001780276\n## 15  0.8051430    32.89216             2.112351         2.705206 0.001401223\n## 16  0.8044287    34.68624             2.116651         2.848018 0.001690224\n## 18  0.7846977    29.92560             2.251349         2.458631 0.001561379\n##          asm       con       cor      var       idm      sav      sva       sen\n## 1  0.1293877 0.6415256 0.8200277 2.782289 0.8279573 8.824394 68.72427 0.9353741\n## 2  0.1579890 0.8731710 0.6507163 2.249945 0.8270829 8.574601 63.51230 0.8683898\n## 3  0.1505104 0.8873958 0.7124469 2.543012 0.7954536 8.975309 70.75865 0.8837085\n## 4  0.2209100 0.6460329 0.7889919 2.530825 0.8507819 7.761204 53.89627 0.8028275\n## 5  0.2003365 0.8590009 0.5561559 1.967683 0.8028749 7.524924 48.93560 0.7482086\n## 6  0.1615854 0.6505237 0.7961280 2.595422 0.8149765 9.199624 74.84073 0.8864075\n## 7  0.1380626 0.9956900 0.7284539 2.833372 0.8150482 7.763293 52.94301 0.9364920\n## 8  0.1904026 0.6784308 0.8347431 3.052655 0.8316168 8.070112 59.25266 0.8784173\n## 9  0.1674585 0.6797577 0.8219618 2.909022 0.8203496 8.024562 57.71364 0.9001455\n## 10 0.2804281 0.6803482 0.6972869 2.123751 0.8352288 7.078050 44.29213 0.7158592\n## 11 0.1314777 0.9383386 0.7304408 2.740506 0.8062684 7.733336 52.28848 0.9315130\n## 12 0.1813276 0.9537908 0.7332325 2.787682 0.8079242 7.807721 54.28855 0.8729091\n## 13 0.1217592 0.8227492 0.8570789 3.878333 0.7920695 9.182270 77.87545 0.9856321\n## 14 0.1715147 0.8154141 0.7888130 2.930550 0.8047271 7.551840 51.17310 0.8985465\n## 15 0.1016483 0.6832697 0.8691118 3.610128 0.7930498 9.194601 76.09011 1.0501020\n## 16 0.1140252 0.6369996 0.8930268 3.977380 0.8074410 9.484619 83.02368 1.0140127\n## 18 0.1334452 0.6040299 0.8718077 3.355952 0.8157160 9.372721 79.30047 0.9774427\n##          ent       dva       den       f12       f13\n## 1  1.1082014 0.6415256 0.3458612 0.4309358 0.6752793\n## 2  1.0423474 0.8731710 0.3534173 0.3762913 0.6189884\n## 3  1.0979242 0.8873958 0.3918416 0.3140898 0.5795154\n## 4  0.9492719 0.6460329 0.3271746 0.4222129 0.6311342\n## 5  0.9296135 0.8590009 0.3763030 0.2264674 0.4597088\n## 6  1.0608443 0.6505237 0.3603573 0.3680182 0.6166491\n## 7  1.1386480 0.9956900 0.3835181 0.3883533 0.6498692\n## 8  1.0385799 0.6784308 0.3530719 0.4213950 0.6524206\n## 9  1.0615039 0.6797577 0.3580896 0.4034220 0.6443924\n## 10 0.8731858 0.6803482 0.3483795 0.2985622 0.5138140\n## 11 1.1294654 0.9383386 0.3849932 0.3856937 0.6458189\n## 12 1.0823919 0.9537908 0.3913382 0.3477689 0.6049515\n## 13 1.1923211 0.8227492 0.3966745 0.4080954 0.6763006\n## 14 1.0841640 0.8154141 0.3842713 0.3811080 0.6322792\n## 15 1.2530925 0.6832697 0.3811126 0.4362835 0.7092498\n## 16 1.1982495 0.6369996 0.3672303 0.4554612 0.7118472\n## 18 1.1617787 0.6040299 0.3614638 0.4422601 0.6949716\nplot_measures(res, measure = \"id\", vjust = -50, size = 0.5) # plota o id\n\n\n\nget_measures(res)\n##    id        x        y  area area_ch perimeter radius_mean radius_min\n## 1   1  529.778  924.681 0.345   0.344     2.996       0.384      0.155\n## 2   2  949.553  912.535 0.358   0.356     2.899       0.378      0.168\n## 3   3 1260.264  994.907 0.271   0.272     2.716       0.346      0.132\n## 4   4  860.149 1220.242 0.333   0.332     2.866       0.377      0.155\n## 5   5  243.855 1289.722 0.362   0.361     2.957       0.396      0.161\n## 6   6 1258.719 1322.275 0.222   0.220     2.641       0.330      0.105\n## 7   7  582.004 1356.951 0.232   0.231     2.657       0.342      0.120\n## 8   8  938.192 1423.960 0.252   0.250     2.793       0.348      0.114\n## 9   9 1429.547 1540.083 0.296   0.295     2.808       0.379      0.136\n## 10 10   53.654 1607.033 0.346   0.345     2.944       0.379      0.159\n## 11 11  644.612 1573.758 0.228   0.229     2.522       0.318      0.119\n## 12 12 1024.701 1844.389 0.242   0.240     2.687       0.343      0.113\n## 13 13 1291.127 1859.023 0.195   0.194     2.605       0.324      0.093\n## 14 14  642.188 1894.638 0.248   0.247     2.846       0.355      0.115\n## 15 15  320.084 1942.288 0.195   0.198     2.535       0.324      0.092\n## 16 16 1414.161 2084.003 0.236   0.245     2.859       0.362      0.077\n## 18 18  777.146 2303.618 0.218   0.218     2.552       0.324      0.109\n##    radius_max radius_sd diam_mean diam_min diam_max major_axis minor_axis\n## 1       0.664     0.160     0.769    0.310    1.328      1.321      0.333\n## 2       0.641     0.150     0.757    0.337    1.282      1.277      0.358\n## 3       0.596     0.149     0.692    0.263    1.191      1.221      0.287\n## 4       0.629     0.150     0.755    0.310    1.258      1.248      0.343\n## 5       0.647     0.155     0.793    0.322    1.293      1.294      0.359\n## 6       0.591     0.152     0.660    0.209    1.181      1.205      0.235\n## 7       0.598     0.154     0.684    0.240    1.197      1.197      0.248\n## 8       0.632     0.160     0.695    0.228    1.264      1.269      0.253\n## 9       0.627     0.161     0.759    0.273    1.253      1.291      0.293\n## 10      0.651     0.158     0.758    0.318    1.301      1.325      0.334\n## 11      0.558     0.139     0.636    0.237    1.116      1.126      0.260\n## 12      0.618     0.156     0.685    0.227    1.236      1.250      0.248\n## 13      0.588     0.154     0.647    0.185    1.175      1.194      0.209\n## 14      0.644     0.165     0.711    0.229    1.288      1.290      0.246\n## 15      0.579     0.153     0.647    0.184    1.158      1.174      0.216\n## 16      0.658     0.171     0.724    0.154    1.316      1.321      0.241\n## 18      0.582     0.144     0.647    0.219    1.164      1.146      0.245\n##    length width radius_ratio eccentricity  theta solidity convexity elongation\n## 1   1.308 0.341        4.289        0.108  1.194    1.002     0.892      0.739\n## 2   1.262 0.360        3.808        0.135 -0.097    1.007     0.948      0.715\n## 3   1.185 0.284        4.526        0.098  1.363    1.000     0.913      0.761\n## 4   1.251 0.346        4.059        0.117 -1.107    1.005     0.911      0.724\n## 5   1.284 0.363        4.020        0.116 -0.933    1.003     0.896      0.717\n## 6   1.173 0.233        5.643        0.070  0.363    1.006     0.886      0.801\n## 7   1.186 0.254        4.985        0.070 -0.574    1.006     0.849      0.786\n## 8   1.256 0.255        5.554        0.073 -0.271    1.005     0.904      0.797\n## 9   1.249 0.290        4.592        0.082 -0.736    1.004     0.929      0.767\n## 10  1.298 0.332        4.090        0.115 -1.415    1.004     0.939      0.744\n## 11  1.103 0.267        4.703        0.094 -0.296    0.996     0.928      0.758\n## 12  1.219 0.248        5.453        0.072  1.501    1.009     0.931      0.796\n## 13  1.173 0.206        6.342        0.055 -0.457    1.004     0.775      0.825\n## 14  1.265 0.246        5.613        0.064 -0.435    1.004     0.903      0.806\n## 15  1.146 0.223        6.296        0.058  0.596    0.989     0.925      0.805\n## 16  1.274 0.249        8.532        0.056 -0.561    0.963     0.649      0.804\n## 18  1.128 0.243        5.315        0.078 -0.410    0.998     0.744      0.785\n##    circularity circularity_haralick circularity_norm coverage   asm   con   cor\n## 1       26.043                2.405            2.122    0.002 0.129 0.642 0.820\n## 2       23.443                2.530            1.910    0.003 0.158 0.873 0.651\n## 3       27.177                2.319            2.226    0.002 0.151 0.887 0.712\n## 4       24.645                2.514            2.007    0.002 0.221 0.646 0.789\n## 5       24.182                2.558            1.965    0.003 0.200 0.859 0.556\n## 6       31.455                2.171            2.586    0.002 0.162 0.651 0.796\n## 7       30.388                2.227            2.490    0.002 0.138 0.996 0.728\n## 8       31.013                2.172            2.546    0.002 0.190 0.678 0.835\n## 9       26.599                2.361            2.167    0.002 0.167 0.680 0.822\n## 10      25.033                2.401            2.041    0.002 0.280 0.680 0.697\n## 11      27.875                2.296            2.287    0.002 0.131 0.938 0.730\n## 12      29.787                2.189            2.450    0.002 0.181 0.954 0.733\n## 13      34.897                2.101            2.878    0.001 0.122 0.823 0.857\n## 14      32.634                2.149            2.678    0.002 0.172 0.815 0.789\n## 15      32.892                2.112            2.705    0.001 0.102 0.683 0.869\n## 16      34.686                2.117            2.848    0.002 0.114 0.637 0.893\n## 18      29.926                2.251            2.459    0.002 0.133 0.604 0.872\n##      var   idm   sav    sva   sen   ent   dva   den   f12   f13\n## 1  2.782 0.828 8.824 68.724 0.935 1.108 0.642 0.346 0.431 0.675\n## 2  2.250 0.827 8.575 63.512 0.868 1.042 0.873 0.353 0.376 0.619\n## 3  2.543 0.795 8.975 70.759 0.884 1.098 0.887 0.392 0.314 0.580\n## 4  2.531 0.851 7.761 53.896 0.803 0.949 0.646 0.327 0.422 0.631\n## 5  1.968 0.803 7.525 48.936 0.748 0.930 0.859 0.376 0.226 0.460\n## 6  2.595 0.815 9.200 74.841 0.886 1.061 0.651 0.360 0.368 0.617\n## 7  2.833 0.815 7.763 52.943 0.936 1.139 0.996 0.384 0.388 0.650\n## 8  3.053 0.832 8.070 59.253 0.878 1.039 0.678 0.353 0.421 0.652\n## 9  2.909 0.820 8.025 57.714 0.900 1.062 0.680 0.358 0.403 0.644\n## 10 2.124 0.835 7.078 44.292 0.716 0.873 0.680 0.348 0.299 0.514\n## 11 2.741 0.806 7.733 52.288 0.932 1.129 0.938 0.385 0.386 0.646\n## 12 2.788 0.808 7.808 54.289 0.873 1.082 0.954 0.391 0.348 0.605\n## 13 3.878 0.792 9.182 77.875 0.986 1.192 0.823 0.397 0.408 0.676\n## 14 2.931 0.805 7.552 51.173 0.899 1.084 0.815 0.384 0.381 0.632\n## 15 3.610 0.793 9.195 76.090 1.050 1.253 0.683 0.381 0.436 0.709\n## 16 3.977 0.807 9.485 83.024 1.014 1.198 0.637 0.367 0.455 0.712\n## 18 3.356 0.816 9.373 79.300 0.977 1.162 0.604 0.361 0.442 0.695\n\n\n\nAnálise de imagem em lote\n\n\nres <- \n  analyze_objects(pattern = \"img\",             # busca o padrão no diretório\n                  reference = TRUE,\n                  reference_area = 20,\n                  back_fore_index = \"R/(G/B)\",\n                  marker = \"length\",\n                  save_image = TRUE,           # salva a imagem\n                  dir_processed = \"proc\",      # cria uma subpasta \n                  watershed = FALSE)\n## Processing image img1 |==========                                | 25% 00:00:00 \n\n\n\n## Processing image img2 |=====================                     | 50% 00:00:05 \n\n\n\n## Processing image img3 |================================          | 75% 00:00:11 \n\n\n\n## Processing image proc_img |======================================| 100% 00:00:17 \n\n\n\n## --------------------------------------------\n##     Image Objects\n##      img1     103\n##      img2     160\n##      img3      17\n##  proc_img      19\n## --------------------------------------------\n\n\n\nGráficos\n\n\nMostrar código\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(ggridges)\nlibrary(ggside)\nmy_theme <- \n  theme_bw(base_size = 16) +\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.title = element_blank()\n  )\n\n\ndf_folha <- import(\"area_foliar.xlsx\")\n\ndf_vars <- \n  df_folha |> \n  select(das, area, length, width) |> \n  set_names(c(\"das\", \"Área (cm2)\", \"Comprimento (cm)\", \"Largura (cm)\")) |> \n  pivot_longer(-das)\n\nggplot(df_vars, aes(x = value, y = factor(das))) +\n  geom_density_ridges(fill = \"steelblue\") +\n  labs() +\n  facet_wrap(~name, scales = \"free\") + \n  labs(x = \"Valor mensurado\",\n       y = \"Dias após a semeadura\") +\n  my_theme\n\n\n\n\n\nMostrar código\n\nggsave(\"density.png\", width = 12, height = 4)\n\np1 <-\n  df_folha |> \n  filter(das %in% c(42, 100)) |> \n  ggplot(aes(length, area)) +\n  geom_xsidedensity(aes(x = length, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_ysidedensity(aes(y = area, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_point(aes(fill = factor(das)),\n             color = \"black\",\n             shape = 21,\n             size = 2,\n             alpha = 0.7) +\n  geom_smooth(method = \"lm\",\n              aes(color = factor(das)),\n              se = FALSE) +\n  labs(x = \"Comprimento (cm)\",\n       y = expression(Área~da~folha~(cm^2))) +\n  my_theme \n\np2 <- \n  df_folha |> \n  subset(das %in% c(42, 100)) |> \n  ggplot(aes(width, area)) +\n    geom_xsidedensity(aes(x = width, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_ysidedensity(aes(y = area, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_point(aes(fill = factor(das)),\n             color = \"black\",\n             shape = 21,\n             size = 2,\n             alpha = 0.7) +\n  geom_smooth(method = \"lm\",\n              aes(color = factor(das)),\n              se = FALSE) +\n  labs(x = \"Largura (cm)\",\n       y = expression(Área~da~folha~(cm^2))) +\n  my_theme \np3 <- \n  df_folha |> \n  subset(das %in% c(42, 100)) |> \n  ggplot(aes(width, length)) +\n      geom_xsidedensity(aes(x = width, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_ysidedensity(aes(y = length, fill = factor(das)),\n                    alpha = 0.7) +\n  geom_point(aes(fill = factor(das)),\n             color = \"black\",\n             shape = 21,\n             size = 2,\n             alpha = 0.7) +\n  geom_smooth(method = \"lm\",\n              aes(color = factor(das)),\n              se = FALSE) +\n  labs(x = \"Largura (cm)\",\n       y = \"Comprimento (cm)\") +\n  my_theme \n\n\nlibrary(metan)\narrange_ggplot(p1, p2, p3,\n               tag_levels = \"a\",\n               guides = \"collect\")\n\n\n\n\n\nMostrar código\nggsave(\"scatter.png\", width = 12, height = 4)\n\n\nFree website hit counter"
  }
]